<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href='/css-sand/bootstrap.min.css'>
    <link rel='stylesheet' href='/stylesheets/bootstrap-switch.css' />
    <link rel='stylesheet' href='/datatables/css/jquery.dataTables.css' />
    <link rel='stylesheet' href='/bt-slider/css/bootstrap-slider.min.css' />
    <link rel='stylesheet' href='/stylesheets/admin-style.css' />
</head>
<body>

<!-- Navbar. Non-collapsable-->
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="navbar-header">
            <a class="navbar-brand" href="#">KK Cyber Cafe</a>
        </div>
    </div>
</nav>

<div class="container">
    <!-- Breadcrumb & Mini-stats -->
    <section class="top-content">
        <div class="row">
            <div class="col-md-6">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><span class="glyphicon glyphicon-home"></span> Home</li>
                    <li class="breadcrumb-item active">Admin</li>
                </ol>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <ul class="top-stat">
                        <li>
                            <div class="top-stat-text">
                                <h6>Active Users</h6>
                                <h4 id="miniStatActiveUsers"> </h4>
                            </div>
                            <div class="top-stat-figure">
                                <i class="glyphicon glyphicon-signal"></i>
                            </div>
                        </li>
                        <li>
                            <div class="top-stat-text">
                                <h6>Total Users</h6>
                                <h4 id="miniStatTotalUsers"> </h4>
                            </div>
                            <div class="top-stat-figure">
                                <i class="glyphicon glyphicon-signal"></i>
                            </div>
                        </li>
                        <li>
                            <div class="top-stat-text">
                                <h6>Rate</h6>
                                <h4 id="miniStatRate"></h4>
                            </div>
                            <div class="top-stat-figure">
                                <button id="rateSave" type="button" class="btn btn-sm" onclick="updateRate(this)">Save</button>
                            </div>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </section>

    <!-- Stats & Notes-->
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="content-header">
                    <h1>Admin Dashboard</h1>
                    <h4>Control Center for Cyber Cafe Management System</h4>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-8"> <!--left-content-->
                <div class="row">
                    <div class="col-md-12">
                        <div class="charts-container">
                            <div class="col-md-4">
                                <div id="statMachine" class="pie-wrapper progress-30">
                                    <div id="temp"></div>
                                </div>
                                <h3>Active Machines</h3>
                            </div>
                            <div class="col-md-4">
                                <div id="statTask" class="pie-wrapper progress-60">
                                    <div id="temp"></div>
                                </div>
                                <h3>Pending Tasks</h3>
                            </div>
                            <div class="col-md-4">
                                <div id="statTicket" class="pie-wrapper progress-90">
                                    <div id="temp"></div>
                                </div>
                                <h3>Pending Tickets</h3>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="machine-status-container container-box">
                            <div class="container-header">
                                <i class="glyphicon glyphicon-hdd"></i>
                                <h5>Machine Status</h5>
                                <h6>State of User and Machine Interaction</h6>
                            </div>
                            <div class="machine-status-content">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4"><!--right-content-->
                <button class="btn btn-default btn-sm" data-toggle="modal" data-target="#taskAdd"><i class="glyphicon glyphicon-plus"></i> Add New Task</button>
                <div class="task-summary-container container-box">
                    <div class="container-header">
                        <i class="glyphicon glyphicon-tasks"></i>
                        <h5>Admin Task List</h5>
                        <h6>List of Ongoing Tasks</h6>
                    </div>
                    <div class="task-list"></div>
                </div>
            </div>
        </div>

        <section class="tickets">
            <div class="row">
                <div class="col-md-12">
                    <button class="btn btn-default btn-sm" data-toggle="modal" data-target="#ticketAdd"><i class="glyphicon glyphicon-plus"></i> Add New Ticket</button>
                    <div class="tickets-container container-box">
                        <div class="container-header">
                            <i class="glyphicon glyphicon-duplicate"></i>
                            <h5>Support Tickets</h5>
                            <h6>List of Support Tickets</h6>
                        </div>
                        <div class="tickets-table">
                            <table id="table_ticket" class="table">
                                <thead>
                                <tr>
                                    <th>No.</th>
                                    <th>Status</th>
                                    <th>Ticket No.</th>
                                    <th>Date</th>
                                    <th>Category</th>
                                    <th>Name</th>
                                    <th>Title</th>
                                    <th>Priority</th>
                                </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section class="users">
            <div class="row">
                <div class="col-md-12">
                    <div class="tickets-container container-box">
                        <div class="container-header">
                            <i class="glyphicon glyphicon-user"></i>
                            <h5>User Records</h5>
                            <h6>List of Registered Users</h6>
                        </div>
                        <div class="tickets-table">
                            <table id="table_user" class="table">
                                <thead>
                                <tr>
                                    <th>No.</th>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Status</th>
                                    <th>Total Time / sec</th>
                                    <th>Total Price / RM</th>
                                </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </section>
</div>

<!-- Modals - Add Task -->
<div id="taskAdd" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add New Task</h4>
            </div>
            <form id="taskAddForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="taskName">Enter Task Name:</label><br/>
                        <input type="text" name="taskName" />
                    </div>
                    <div class="form-group">
                        <label for="taskProg">Estimate Task Progress:</label><br/>
                        <input name="taskProg" class="ex1" data-slider-id="ex1Slider" type="text" data-slider-min="0" data-slider-max="100" data-slider-step="1" data-slider-value="0"/>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-md btn-success" onclick="addTask(this)">Save</button>
                </div>
            </form>
        </div>
    </div>
</div> <!-- end modal-->

<!-- Modals - Add Ticket -->
<div id="ticketAdd" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add New Ticket</h4>
            </div>
            <form id="ticketAddForm">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="ticketCat">Select Category :</label><br/>
                        <select name="ticketCat">
                            <option>Front-End Site</option>
                            <option>Technical Support</option>
                            <option>General Information</option>
                            <option>Sales</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="ticketName">Ticket Issuer Name :</label><br/>
                        <input type="text" name="ticketName" />
                    </div>
                    <div class="form-group">
                        <label for="ticketTitle">Ticket Title :</label><br/>
                        <input type="text" name="ticketTitle" />
                    </div>
                    <div class="form-group">
                        <label for="ticketPrio">Ticket Priority :</label><br/>
                        <select name="ticketPrio">
                            <option>Low</option>
                            <option>Medium</option>
                            <option>High</option>
                            <option>Critical</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-md btn-success" onclick="addTicket(this)">Save</button>
                </div>
            </form>
        </div>
    </div>
</div> <!-- end modal-->

<script src="/js/jquery.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="/javascripts/bootstrap-switch.js"></script>
<script src="/bt-slider/bootstrap-slider.min.js"></script>
<script src="/datatables/js/jquery.dataTables.js"></script>
<script>
    "use strict";

    function showRate() {
        $('#miniStatRate').load('/admin/rate', function (result) {
            let rate = result;
            rate = parseFloat(Math.round(rate * 100) / 100).toFixed(2);
            $('#miniStatRate').html('<i class="glyphicon glyphicon-usd" id="rateBtn" onclick="changeRate()"></i> '+rate);
        });
    }
    showRate();

    function changeRate() {
        $('#miniStatRate').html('<form id="rateForm"><input name="rateInput" id="rateInput" type="number" min="0" step="0.5"></form>');
        $('#rateSave').css('display', 'block');
    }

    function updateRate(elem) {
        let newrate = $(elem).parent().prev().find('#rateForm').serialize();
        $.post('/admin/rateChange', {newrate})
        .done(function(result){
            $('#rateSave').css('display', 'none');
            return showRate();
        })
    }

    function listMachine() {
        $('.machine-status-content').load('/admin/machine', function (result) {
            let machineState = JSON.parse(result);
            $('.machine-status-content').html('');

            if (machineState != null) {
                let htmlElements = "";
                machineState.forEach(function (item, index, arr) {
                    let status = item.status;
                    let html = ""
                    if (item.status == 'paused') {
                        html = '<input type="checkbox" name="machineStateSwitch" alt="' + item._id + '">';
                    }
                    else {
                        html = '<input type="checkbox" name="machineStateSwitch" alt="' + item._id + '" checked>'
                    }
                    htmlElements += '<div class="machine-box">'
                            + '<div class="machine-box-desktop" data-toggle="tooltip" title="Current User: ' + item.currentUser + '">'
                            + '<img src="/images/components/desktop.svg" />'
                            + '<div class="status ' + item.status + '">'
                            + '<p class="text-center"><b>' + item.no + '</b></p>'
                            + '</div>'
                            + '</div>'
                            + html
                            + '</div>'
                });
                $('.machine-status-content').append(htmlElements);
                //Initiate and set switches for machine status
                $.fn.bootstrapSwitch.defaults.size = 'mini';
                $.fn.bootstrapSwitch.defaults.onColor = 'warning';
                $("[name='machineStateSwitch']").bootstrapSwitch().on('switchChange.bootstrapSwitch', function (event, state) {
                    var mbox = $(this).parent().parent().prev().children('div');
                    //console.log(mbox.className);
                    if (mbox.hasClass('open')) {
                        mbox.removeClass('open');
                        mbox.addClass('paused');
                        let id = $(this).attr('alt');
                        let toStatus = 'paused';
                        $.post('/admin/machineUpdate/', {'id': id, 'toStatus': toStatus});
                    }
                    else if (mbox.hasClass('paused')) {
                        mbox.removeClass('paused');
                        mbox.addClass('open');
                        let id = $(this).attr('alt');
                        let toStatus = 'open';
                        $.post('/admin/machineUpdate/', {'id': id, 'toStatus': toStatus});
                    }
                    else if (mbox.hasClass('active')) {
                        $(this).bootstrapSwitch('state', true, true);
                        alert('Can\'t Pause An Active Connection');
                    }
                });
            }
        });
    }
    listMachine();

    function listTask() {
        $('.task-list').load('/admin/task', function (result) {
            let taskData = JSON.parse(result);
            $('.task-list').html('');
            //Get and populate task list
            taskData.forEach(function (taskitem, index, arr) {
                let htmlBar = '';
                let uid = taskitem._id;
                let uprog = taskitem.taskProgress;
                if(taskitem.status == "Completed") {
                    return true;
                }
                if (taskitem.taskProgress < 50) {
                    htmlBar = '<div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="' + taskitem.taskProgress + '" aria-valuemin="0" aria-valuemax="100" style="width:' + taskitem.taskProgress + '%"></div>'
                } else if (taskitem.taskProgress >= 50 && taskitem.taskProgress < 80) {
                    htmlBar = '<div class="progress-bar progress-bar-warning" role="progressbar" aria-valuenow="' + taskitem.taskProgress + '" aria-valuemin="0" aria-valuemax="100" style="width:' + taskitem.taskProgress + '%"></div>'
                } else if (taskitem.taskProgress >= 80) {
                    htmlBar = '<div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="' + taskitem.taskProgress + '" aria-valuemin="0" aria-valuemax="100" style="width:' + taskitem.taskProgress + '%"></div>'
                }

                let htmlText =
                '<div class="task-item">' +
                    '<form id="updateTask">' +
                        '<div class="row">' +
                            '<div class="task-item-text">' +
                                '<div class="col-md-7">' +
                                    '<h5 class="text-left">' + taskitem.taskName + '</h5>' +
                                '</div>' +
                                '<div class="col-md-5">' +
                                    '<div class="task-item-percentage">' +
                                        '<div class="col-md-8">' +
                                            '<h5>'+taskitem.status+' </h5>' +
                                        '</div>' +
                                        '<div class="col-md-4">' +
                                            '<i class="glyphicon glyphicon-cog" uprog="'+uprog+'" onclick="updateTaskForm(this)"></i>' +
                                        '</div>' +
                                '   </div>' +
                                '</div>' +
                            '</div>' +
                        '</div>' +
                    '<div class="row">' +
                        '<div class="col-md-12">' +
                            '<div class="task-item-bar">' +
                            '<div class="progress">' +
                            htmlBar +
                        '</div>' +
                        '</div>' +
                        '<div class="col-md-2 pull-right">' +
                            '<button type="button" class="btn btn-sm btn-success taskSave" uid="'+uid+'" onclick="updateTask(this)">Save</button>' +
                        '</div>' +
                    '</div>' +
                    '</form>' +
                '</div>'

                $('.task-list').append(htmlText);
            });
        });
    }
    listTask();

    function updateTask(elem) {
        let id = $(elem).attr('uid');
        let formData = $(elem).parent().parent().parent().parent().serialize();
        $.post('/admin/taskUpdate', {formData, id})
        .done(function(result){
            return listTask();
        });
    }

    function addTask(elem) {
        let formData = $(elem).parent().parent().serialize();
        $.post('/admin/taskAdd', {formData})
        .done(function(result){
            $('#taskAddForm')[0].reset();
            $('#taskAdd').modal('hide');
            return listTask();
        })
    }

    function updateTaskForm(elem) {
        let htmlElemStatus =
        '<div class="col-md-12">' +
            '<select class="btn btn-mini" name="taskStatus">' +
                '<option selected="selected">Pending</option>' +
                '<option>Completed</option>' +
            '</select>' +
        '</div>'

        let eprog = $(elem).attr('uprog');
        let htmlElemBar ='<input name="taskProg" class="ex1" data-slider-id="ex1Slider" type="text" data-slider-min="0" data-slider-max="100" data-slider-step="1" data-slider-value="'+eprog+'"/>';

        $(elem).parent().parent().parent().parent().parent().next().children().find('.taskSave').css("display", "block");
        $(elem).parent().parent().parent().parent().parent().next().children().find('.task-item-bar').html(htmlElemBar);
        $(elem).parent().parent().html(htmlElemStatus);

        $('.ex1').slider({
            formatter: function(value) {
                return 'Current value: ' + value;
            }
        });
    }

    function listTicket(){
        $('#table_ticket tbody').load('/admin/tickets', function (result) {
            let ticketData = JSON.parse(result);
            $('#table_ticket tbody').html('');
            let counter = 1;
            ticketData.forEach(function (item) {
                let uid = item._id;
                let htmlElem = '';
                let htmlPriority = '';

                if (item.priority == 'Completed') {
                    htmlElem = '<td><button type="button" class="btn btn-sm ticketBtn active disabled" uid="' + uid + '" onclick="updateTicket(this)"><i class="glyphicon glyphicon-check"></i></button></td>'
                }
                else {
                    htmlElem = '<td><button type="button" class="btn btn-sm ticketBtn" uid="' + uid + '" onclick="updateTicket(this)"><i class="glyphicon glyphicon-check"></i></button></td>'
                }

                switch (item.priority) {
                    case 'Completed':
                        htmlPriority = '<td><span class="label label-success">' + item.priority + '</span>'
                        break;
                    case 'Low':
                        htmlPriority = '<td><span class="label label-default">' + item.priority + '</span>'
                        break;
                    case 'Medium':
                        htmlPriority = '<td><span class="label label-info">' + item.priority + '</span>'
                        break;
                    case 'High':
                        htmlPriority = '<td><span class="label label-warning">' + item.priority + '</span>'
                        break;
                    case 'Critical':
                        htmlPriority = '<td><span class="label label-danger">' + item.priority + '</span>'
                        break;
                }
                let html = '<tr>'
                        + '<td>'+counter+'.</td>'
                        + htmlElem
                        + '<td>[#' + item.number + ']</td>'
                        + '<td>' + item.date + '</td>'
                        + '<td>' + item.category + '</td>'
                        + '<td>' + item.name + '</td>'
                        + '<td>' + item.title + '</td>'
                        + htmlPriority
                        + '</tr>';

                $('#table_ticket tbody').append(html);
                counter ++;
            });
            $('#table_ticket').DataTable();
        });
    }
    listTicket();

    function updateTicket(elem) {
        let id = $(elem).attr('uid');
        $.post('/admin/ticketUpdate', {id})
        .done(function(result){
            $('#table_ticket').dataTable().fnDestroy();
            listTicket();
        });
    }

    function addTicket(elem) {
        let formData = $(elem).parent().parent().serialize();
        $.post('/admin/ticketAdd', {formData})
        .done(function(result){
            $('#ticketAddForm')[0].reset();
            $('#ticketAdd').modal('hide');
            $('#table_ticket').dataTable().fnDestroy();
            return listTicket();
        })
    }

    function listUsers(){
        $('#table_user tbody').load('/admin/users', function (result) {
            let usersData = JSON.parse(result);
            $('#table_user tbody').html('');
            let counter = 1;
            usersData.forEach(function(item) {
                let totalTime = 0;
                let currTimeDiff = 0;
                let totalPrice = 0;
                let currPrice = '';
                for( let i=0; i<item.timelog.length; i++) {
                    if (item.timelog[i].logoutMsec != null) {
                        currTimeDiff = item.timelog[i].logoutMsec - item.timelog[i].loginMsec;
                    }
                    else {
                        currTimeDiff = 0;
                    }
                    totalTime += currTimeDiff;
                    if (item.timelog[i].price != null) {
                        currPrice = item.timelog[i].price.replace(/^[A-Z][A-Z]/, '').trim();
                    }
                    else {
                        currPrice = 0;
                    }
                    totalPrice += Number(currPrice);
                }

                var html = '<tr>'
                        + '<td>'+counter+'.</td>'
                        + '<td class="text-capitalize">'+item.name+'</td>'
                        + '<td>'+item.email+'</td>'
                        + '<td class="text-capitalize">'+item.status+'</td>'
                        + '<td>'+((totalTime/1000)%60).toFixed(2)+'</td>'
                        + '<td>'+totalPrice+'</td>'
                        + '</tr>';

                $('#table_user tbody').append(html);
                counter++;
            });
            $('#table_user').DataTable();
        });
    }
    listUsers();

    function listMiniStats() {
        $('#miniStatActiveUsers').load('/admin/users', function (result) {
            let users = JSON.parse(result);
            $('#miniStatActiveUsers').html('');
            let activeUsers = users.filter(function(list){
                return list.status === 'active'
            });
            $('#miniStatActiveUsers').html('<i class="glyphicon glyphicon-plus-sign"></i>' +activeUsers.length+' users');
            $('#miniStatTotalUsers').html('<i class="glyphicon glyphicon-plus-sign"></i>' +users.length+' users');
        });
    }
    listMiniStats();

    function listStats() {
        let htmlElem = '<div id="temp"></div>' +
                '<div class="pie">' +
                '<div class="left-side half-circle"></div>' +
                '<div class="right-side half-circle"></div>' +
                '</div>';

        $('#statMachine #temp').load('/admin/machine', function (result) {
            let machineState = JSON.parse(result);
            $('#statMachine #temp').html('');
            let activeMachines = machineState.filter(function (list) {
                return list.status === 'active';
            });
            if (activeMachines.length == 0) {
                $('#statMachine').html('<span class="label">0</span>' +htmlElem);
            }
            else {
                $('#statMachine').html('<span class="label">' + activeMachines.length + '</span>' +htmlElem);
            }
        });

        $('#statTask #temp').load('/admin/task', function (result) {
            let task = JSON.parse(result);
            $('#statTask #temp').html('');
            let pendingTask = task.filter(function(list){
                return list.status === 'Pending';
            });
            //console.log(pendingTask.length);
            $('#statTask').html('<span class="label">'+pendingTask.length+'</span>' +htmlElem);
        });

        $('#statTicket #temp').load('/admin/tickets', function (result) {
            let ticket = JSON.parse(result);
            $('#statTicket #temp').html('');
            let pendingTicket = ticket.filter(function (list) {
                return list.priority !== 'Completed';
            });
            $('#statTicket').html('<span class="label">' + pendingTicket.length + '</span>' +htmlElem);
        });
    }
    listStats();

    $(document).ready(function() {
        "use strict";
        //Initialize slider
        $('.ex1').slider({
            formatter: function(value) {
                return 'Current value: ' + value;
            }
        });

        //Reload
        setInterval(function() {
            listMachine();
            listStats();
            listMiniStats();
            listUsers();
        }, 3000);
    });
</script>
</body>
</html>
